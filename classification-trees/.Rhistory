kmeans.3$cluster
kmeans.3$cluster
mi.datos.mx$categoria <- kmeans.3$cluster
mi.datos.mx
mi.datos.mx[mi.datos.mx$categoria == 2,]$categoria <- "Normalones"
mi.datos.mx[mi.datos.mx$categoria == 1,]$categoria <- "Maletas"
mi.datos.mx[mi.datos.mx$categoria == 3,]$categoria <- "Dioses"
mi.datos.mx
plot(mi.datos.mx, col=kmeans.3$cluster)
kmeans.3 <- kmeans(mi.datos.mx, 3)
kmeans.3$cluster
mi.datos.mx$categoria <- kmeans.3$cluster
mi.datos.mx
plot(mi.datos.mx, col=kmeans.3$cluster)
pwd()
getwd()
students.full.data <- read.csv("students.full.data.csv", stringsAsFactors = F)
students.full.data
students.complete <- students.full.data[complete.cases(students.full.data),]
str(students.complete)
as.numeric(students.complete$highest.education.degree)
as.numeric(students.complete$highest.education.degree)
students.complete <- students.full.data[complete.cases(students.full.data),]
str(students.complete)
as.numeric(students.complete$highest.education.degree)
students.complete
students.complete
as.numeric(students.complete$highest.education.degree)
students.complete
as.numeric(students.complete$highest.education.degree)
str(students.complete)
students.full.data <- read.csv("students.full.data.csv", stringsAsFactors = T)
students.full.data
students.complete <- students.full.data[complete.cases(students.full.data),]
str(students.complete)
as.numeric(students.complete$highest.education.degree)
students.complete
as.numeric(students.complete$highest.education.degree)
students.complete
as.numeric(students.complete$highest.education.degree)
students.complete$degree <- as.numeric(students.complete$highest.education.degree)
students.complete
mi.students <- students.complete[,c("age", "degree")]
mi.students
wss <- vector()
centers
for (i in 1:19) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
wss <- vector()
for (i in 1:19) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
mi.students
wss <- vector()
for (i in 1:19) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
for (i in 1:19) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
for (i in 1:10) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
wss <- vector()
for (i in 1:10) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
# PLOT 1
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:9) wss[i] <- sum(kmeans(mi.students, centers = i)$withinss)
# PLOT 1
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
set.seed(1234)
km.st <- kmeans(mi.students, 4)
attributes(km.st)
km.st$cluster
plot(mi.students, col=km.st$cluster)
points(km.st$centers[, c("age", "degree")], col = 1:3, pch = 2, cex = 3)
wss <- vector()
for (i in 1:15) wss[i] <- sum(kmeans(mi.iris, centers = i)$withinss)
# PLOT 1
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
set.seed(1234)
kmeans.3 <- kmeans(mi.iris, 3)
attributes(kmeans.3)
kmeans.3$cluster
kmeans.3$cluster
kmeans.3$withinss
table(kmeans.3$cluster, iris$Species)
# PLOT 2
plot(mi.iris[,c("Petal.Length", "Petal.Width")], col =kmeans.3$cluster)
# PLOT 2
mi.iris[,c("Petal.Length", "Petal.Width")]
# PLOT 2
plot?
plot(mi.iris[,c("Petal.Length", "Petal.Width")], col =kmeans.3$cluster)
# PLOT 2
?plot
points(kmeans.3$centers[, c("Petal.Length", "Petal.Width")], col = 1:3, pch = 2, cex = 3)
kmeans.3$centers[, c("Petal.Length", "Petal.Width")]
kmeans.3$centers
kmeans.3
kmeans.3$size
Array.1 = c(1,2,3)
Array.2 = c(10,1000)
Array.1 + Array.2
Array.2 = c(10,100, 2)
Array.1 + Array.2
?read.csv
var.a <- 1+4i
var.complex <- complex(real = 10, imaginary = 9)
data <- read.csv('alldata.csv')
data <- read.csv('~/Documents/github/medical-project/alldata.csv')
colnames(data)
numeric.data <- data[,c("lastheartrate", "lastweight")]
numeric.data
wss <- vector()
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(mi.iris, centers = i)$withinss)
# PLOT 1
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
plot (1:length(wss), wss, type="b", xlab="Numero de clusters",
ylab="error")
set.seed(1234)
kmeans.4 <- kmeans(numeric.data, 4)
kmeans.4$cluster
attributes(kmeans.3)
table(kmeans.3$cluster, iris$Species)
iris$Species
patients <- data[,c("patients")]
colnames(data)
patients <- data[,c("patient")]
patient
patients
table(kmeans.4$cluster, patients)
kmeans.4$cluster
# PLOT clusters
plot(data[,c("lastheartrate", "lastweight")], col=kmeans.4$cluster)
kmeans.4$centers
# PLOT clusters
plot(numeric.data, col=kmeans.4$cluster)
points(kmeans.4$centers[, c("lastheartrate", "lastweight")], col = 1:3, pch = 2, cex = 3)
kmeans.4$cluster
plot(numeric.data)
colnames(data)
numeric.data.2 <- data[,c("lastheartrate", "lastdateglucose")]
plot(numeric.data.2)
kmeans.4$centers
set.seed(Sys.time())
wss <- vector()
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
set.seed(Sys.time())
wss <- vector()
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
colnames(data)
numeric.data <- data[,c("lastheartrate", "lastweight", "lastpo2", "lastdiastolic", "lastsystolic", "lastheight", "lastglucose", "lastimc")]
numeric.data <- data[,c("lastheartrate", "lastweight", "lastspo2", "lastdiastolic", "lastsystolic", "lastheight", "lastglucose", "lastimc")]
numeric.data
set.seed(Sys.time())
wss <- vector()
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
set.seed(1234)
kmeans.4 <- kmeans(numeric.data, 6)
kmeans.4$centers
colnames(data)
numeric.data <- data[,c("lastheartrate", "lastavbloodpressure", "lastweight", "lastspo2", "lastdiastolic", "lastsystolic", "lastheight", "lastglucose", "lastimc")]
numeric.data
colnames(data)
numeric.data <- data[,c("lastheartrate", "lastavbloodpressure", "lastweight", "lastspo2", "lastdiastolic", "lastsystolic", "lastheight", "lastglucose", "lastimc")]
numeric.data
set.seed(Sys.time())
wss <- vector()
for (i in 1:15) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:15, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
wss <- vector()
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
for (i in 1:10) wss[i] <- sum(kmeans(numeric.data, centers = i)$withinss)
# Elbow plot
plot(1:10, wss, type="b", xlab="Numero de clusters", ylab="Error standard")
set.seed(1234)
kmeans.4 <- kmeans(numeric.data, 7)
kmeans.4$centers
iris
?iris
str(iris)
head(iris)
tail(iris)
summary(iris)
colnames(iris)
# Get all rows, except column 5
mi.iris <- iris[,-5]
# Get all rows, and 1-4 columns
mi.iris <- iris[,1:4]
# Best approach, selecting desired columns
mi.iris <- iris[,c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]
set.seed(1234)
kmeans.3 <- kmeans(mi.iris, 3)
kmeans.3$cluster
kmeans.3$centers
head(iris)
summary(iris)
summary(iris)
# Split the dataset between the test data and the training data
sample(150, size = 10, replace = F)
# Split the dataset between the test data and the training data
sample(150, size = 10, replace = F)
# Split the dataset between the test data and the training data
sample(150, size = 10, replace = F)
?sample
# Split the dataset between the test data and the training data
sample(iris, size = 10, replace = F)
?sample
sample(x=c(1,2), size = nrow(iris), replace = T, prob = c(.7, .3))
ind <- sample(x=c(1,2), size = nrow(iris), replace = T, prob = c(.8, .2))
ind
iris$Species
iris[iris$Species == "setosa"]
iris[iris$Species == "setosa",]
ind==2
training.set <- iris[ind==1,]
test.set <- iris[ind==2,]
nrow(training.set)
nrow(test.set)
str(training.set)
summary(training.set)
install.packages('party')
# install.packages('party')
install.packages('rpart')
install.packages('party')
#
# install.packages('party')
# install.packages('rpart')
names(iris)
version
formula.1 <- Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
class(formula.1)
iris.ctree <- ctree(formula = formula.1, data = training.set)
# install.packages('party')
# install.packages('rpart')
names(iris)
# install.packages('party')
# install.packages('rpart')
names(iris)
install.packages('party')
install.packages('rpart')
# Check that class is formula
class(formula.1)
iris.ctree <- ctree(formula = formula.1, data = training.set)
?ctree
# install.packages('party')
# install.packages('rpart')
library('party')
library('rpart')
iris.ctree <- ctree(formula = formula.1, data = training.set)
?ctree
class(iris.ctree)
# These are the rules
print(iris.ctree)
cor(iris[,-5])
plot(iris.ctree)
attributes(iris.ctree)
getwd()
setwd("/Users/luisp/Documents/advanced-databases-course")
?png
array.1 <- 1:100
plot(array.1)
png(filename = "cart_iris_tec20.jpg", width = 1500, height = 1000)
dev.off()
plot(iris.ctree, type="simple")
test.pred <- predict(iris.ctree, newdata = test.set)
test.pred
table(test.pred, test.set$Species)
names(iris)
my.flower <- data.frame(Sepal.Length = 2000,
Sepal.Width = 1000000,
Petal.Length = 4.61,
Petal.Width = 1.7)
test.pred <- predict(iris.ctree, newdata = my.flower)
test.pred
my.flower <- data.frame(Sepal.Length = 1000,
Sepal.Width = 5000,
Petal.Length = 2000,
Petal.Width = 500)
my.flower <- data.frame(Sepal.Length = 2000,
Sepal.Width = 1000000,
Petal.Length = 4.61,
Petal.Width = 1.7)
my.other.flower <- data.frame(Sepal.Length = 1000,
Sepal.Width = 5000,
Petal.Length = 2000,
Petal.Width = 500)
test.pred <- predict(iris.ctree, newdata = my.other.flower)
test.pred
my.flower <- data.frame(Sepal.Length = 2000,
Sepal.Width = 1000000,
Petal.Length = 1.5,
Petal.Width = 500)
test.pred <- predict(iris.ctree, newdata = my.flower)
test.pred
data("bodyfat", package="TH.data")
?bodyfat
?bodyfat
head(bodyfat)
summary(bodyfat)
names(bodyfat)
ind <- sample(x=c(1,2), size = nrow(bodyfat), replace = T, prob = c(.8, .2))
training.set <- iris[ind==1,]
test.set <- iris[ind==2,]
library('party')
library('rpart')
names(bodyfat)
names(bodyfat)
formula.1 <- DEXfat ~ waistcirc + hipcirc + elbowbreadth + kneebreadth + anthro3a + anthro3b + anthro3c + anthro4
class(formula.1)
training.set
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
names(bodyfat)
training.set <- bodyfat[ind==1,]
test.set <- bodyfat[ind==2,]
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
attributes(bodyfat.ctree)
setwd("/Users/luisp/Documents/advanced-databases-course")
getwd()
png(filename = "cart_iris_tec20.jpg", width = 1500, height = 1000)
?png
dev <- png(filename = "cart_iris_tec20.jpg", width = 1500, height = 1000)
?dev
??dev
attributes(dev)
dev.off()
plot(bodyfat.ctree)
plot(bodyfat.ctree, type = "simple")
plot(bodyfat.ctree)
test.pred <- predict(bodyfat.ctree, newdata = test.set)
test.pred
table(test.pred, test.set$DEXfat)
dev <- png(filename = "cart_iris_tec20.jpg", width = 1500, height = 1000)
plot(bodyfat.ctree)
dev.off()
setwd("/Users/luisp/Documents/advanced-databases-course/classification-trees")
?png
png(filename = "cart_iris_tec20.jpg", width = 1500, height = 1000)
plot(iris.ctree)
dev.off()
setwd("/Users/luisp/Documents/advanced-databases-course/classification-trees")
getwd()
dev <- png(filename = "cart_bodyfat1_tec20.jpg", width = 1500, height = 1000)
plot(bodyfat.ctree)
dev.off()
plot(bodyfat.ctree)
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
formula.2 <- DEXfat ~ waistcirc + hipcirc + elbowbreadth + kneebreadth
class(formula.2)
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
class(bodyfat.ctree.2)
plot(bodyfat.ctree.2)
formula.2 <- DEXfat ~ waistcirc + hipcirc + elbowbreadth + kneebreadth
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
plot(bodyfat.ctree)
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
setwd("/Users/luisp/Documents/advanced-databases-course/classification-trees")
getwd()
dev <- png(filename = "cart_bodyfat1_tec20.jpg", width = 1500, height = 1000)
plot(bodyfat.ctree)
dev.off()
setwd("/Users/luisp/Documents/advanced-databases-course/classification-trees")
getwd()
dev <- png(filename = "cart_bodyfat1_tec20.jpg", width = 1500, height = 1000)
plot(bodyfat.ctree)
setwd("/Users/luisp/Documents/advanced-databases-course/classification-trees")
getwd()
dev <- png(filename = "cart_bodyfat2_tec20.jpg", width = 1500, height = 1000)
plot(bodyfat.ctree.2)
dev.off()
names(bodyfat)
ind <- sample(x=c(1,2), size = nrow(bodyfat), replace = T, prob = c(.8, .2))
training.set <- bodyfat[ind==1,]
test.set <- bodyfat[ind==2,]
formula.1 <- DEXfat ~ waistcirc + hipcirc + elbowbreadth + kneebreadth + anthro3a + anthro3b + anthro3c + anthro4
class(formula.1)
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
data("bodyfat", package="TH.data")
?bodyfat
head(bodyfat)
summary(bodyfat)
names(bodyfat)
ind <- sample(x=c(1,2), size = nrow(bodyfat), replace = T, prob = c(.8, .2))
training.set <- bodyfat[ind==1,]
test.set <- bodyfat[ind==2,]
library('party')
library('rpart')
names(bodyfat)
formula.1 <- DEXfat ~ waistcirc + hipcirc + elbowbreadth + kneebreadth + anthro3a + anthro3b + anthro3c + anthro4
class(formula.1)
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
dev.off()
dev.off()
plot(bodyfat.ctree)
formula.2 <- DEXfat ~ waistcirc + hipcirc + elbowbreadth + kneebreadth
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
formula.2 <- DEXfat ~ waistcirc + hipcirc + kneebreadth
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
formula.2 <- DEXfat ~ waistcirc + elbowbreadth + kneebreadth
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
formula.2 <- DEXfat ~ elbowbreadth + kneebreadth + waistcirc + hipcirc
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
# Formula 2
names(bodyfat)
formula.1 <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth + anthro3a + anthro3b + anthro3c + anthro4
class(formula.1)
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
formula.1 <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth + anthro3a + anthro3b + anthro3c + anthro4
class(formula.1)
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
attributes(bodyfat.ctree)
plot(bodyfat.ctree, type = "simple")
plot(bodyfat.ctree)
formula.2 <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
plot(bodyfat.ctree.2)
plot(bodyfat.ctree)
attributes(bodyfat.ctree)
formula.1 <- DEXfat ~ age + waistcirc + hipcirc + elbowbreadth + kneebreadth + anthro3a + anthro3b + anthro3c + anthro4
class(formula.1)
bodyfat.ctree <- ctree(formula = formula.1, data = training.set)
class(bodyfat.ctree)
plot(bodyfat.ctree)
formula.2 <- DEXfat ~ age + waistcirc + hipcirc
bodyfat.ctree.2 <- ctree(formula = formula.2, data = training.set)
plot(bodyfat.ctree.2)
